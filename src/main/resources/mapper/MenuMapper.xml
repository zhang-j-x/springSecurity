<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jx.security.dao.MenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jx.security.entity.Menu">
        <id column="id" property="id" />
        <result column="component" property="component" />
        <result column="path" property="path" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="icon" property="icon" />
        <result column="status" property="status" />
        <result column="require_auth" property="requireAuth" />
        <result column="pid" property="pid" />
        <result column="seq" property="seq" />
        <result column="level" property="level" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, component, path, name, code, icon, status, require_auth AS requireAuth, pid,level,seq
    </sql>

    <select id="getMenuListByRole" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        A.id,
        A.component,
        A.path,
        A.name,
        A.code,
        A.icon,
        A.status,
        A.require_auth AS requireAuth,
        A.pid,
        A.level,
        A.seq
        from
        (SELECT * from menu,(select querySystemMenu(0) cids) t where FIND_IN_SET(pid,cids)) A JOIN
        (select distinct  menu_id from menu_role where role_id in
            (
                <foreach collection="list" item="item" index="index" separator=",">
                    #{item}
                </foreach>
            )
        ) B
        on B.menu_id = A.id and A.status ='S0A'
    </select>


    <select id="qryTreeNode" resultType="com.jx.security.dto.MenuTreeNodeDto">
        select
            pid as id, group_concat(id) childIdStr
        from menu
        GROUP BY pid
        ORDER BY level ASC
    </select>

    <select id="getMenuTreeRootByRole" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        A.id,
        A.component,
        A.path,
        A.name,
        A.code,
        A.icon,
        A.status,
        A.require_auth AS requireAuth,
        A.pid,
        A.level,
        A.seq
        from
        menu A JOIN
        (select distinct  menu_id from menu_role where role_id in
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
        ) B
        on B.menu_id = A.id
        and A.pid = 0
    </select>

</mapper>
